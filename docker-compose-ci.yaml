version: '3.9'
services:

  frontend:
    image: puzynjailya/todolist_front
    restart: always
    ports:
      - 80:80
    volumes:
      - ./todo-list-frontend/docker/nginx.conf:/etc/nginx/conf.d/default.conf

  api:
    image: puzynjailya/todolist:$GITHUB_RUN_ID
    restart: always
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      pg:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - .:/code/

  migrations:
    image: puzynjailya/todolist:$GITHUB_RUN_ID
    restart: always
    env_file:
      - .env
    depends_on:
      pg:
        condition: service_healthy
    command: bash -c "
             python manage.py makemigrations && 
             python manage.py migrate"
    volumes:
      - .:/code/

  pg:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

