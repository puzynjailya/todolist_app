name: Continious Integration
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # Code clone
      - name: clone code
        uses: actions/checkout@v2
      # Build container
      - name: docker build
        run: docker build -t puzynjailya/todolist:$GITHUB_RUN_ID .
      # Login to docker
      - name: docker login
        run: echo ${{ secrets.DOCKERHUB_TOKEN}} | docker login -u ${{ secrets.DOCKERHUB_USERNAME}} --password-stdin
      # Push container
      - name: docker push
        run: docker push puzynjailya/todolist:$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_USER: ${{secrets.DB_USER}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_NAME: ${{secrets.DB_NAME}}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: create and fill config files
        run: |
          mkdir deploy
          mkdir -p deploy/todo-list-frontend/docker/
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cp ./configs/nginx.conf deploy/todo-list-frontend/docker/nginx.conf
          cp ./app/etc/env/.env deploy/todolist/etc/env/.env
      - name: clone data to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: "todolist"
          strip_components: 1

      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd todolist
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d


